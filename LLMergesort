#include<bits/stdc++.h>
using namespace std;

struct node{
    int data;
    struct node* next;
};

node* merge(node* f, node* b);
void partition(node* source, node** front, node** back);

void mergesort(node** head){
    node* h = *head;
    node* aa;
    node* bb;
    if((h == NULL) || (h->next == NULL)) return;
    partition(h,&aa,&bb);
    mergesort(&aa);
    mergesort(&bb);
    *head = merge(aa,bb);
}

node* merge(node* f, node* b){
    node* res = NULL;
    if(f == NULL) return b;
    if(b == NULL) return f;
    if(f->data <= b->data){
        res = f;
        res->next = merge(f->next,b);
    }
    else{
        res = b;
        res->next = merge(f,b->next);
    }
    return res;
}

void partition(node* source, node** front, node** back){
    node* slow = source;
    node* fast = source->next;
    while(fast != NULL){
        fast = fast->next;
        if(fast != NULL){
            slow = slow->next;
            fast = fast->next;
        }
    }
    *front = source;
    *back = slow->next;
    slow->next = NULL;
}

void printlist(node *A){
    while(A != NULL){
        cout<<A->data<<" ";
        A = A->next;
    }
}

void push(node **head, int data){
    node *n = new node();
    n->data = data;
    n->next = *head;
    *head = n;
}

int main(){
    node *a = NULL;
    push(&a,5);
    push(&a,15);
    push(&a,6);
    push(&a,21);
    printlist(a);
    cout<<"\n";
    mergesort(&a);
    printlist(a);
    return 0;
}
